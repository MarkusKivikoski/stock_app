/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var parse = require( './parse.js' );


// MAIN //

/**
* Validates `repl.txt` contents.
*
* @private
* @param {string} str - `repl.txt` contents
* @param {Object} meta - meta-information
*/
function validate( str ) {
	var validators;
	var section;
	var asts;
	var ast;
	var i;
	var j;
	var k;

	asts = parse( str );
	validators = this.validators; // eslint-disable-line no-invalid-this
	for ( i = 0; i < asts.length; i++ ) {
		ast = asts[ i ];
		for ( j = 0; j < validators.function.length; j++ ) {
			validators.function[ j ]( ast );
		}
		if ( ast.signature ) {
			for ( j = 0; j < validators.signature.length; j++ ) {
				validators.signature[ j ]( ast.signature );
			}
		}
		if ( ast.description ) {
			for ( j = 0; j < validators.description.length; j++ ) {
				validators.description[ j ]( ast.description );
			}
		}
		if ( ast.sections ) {
			for ( j = 0; j < validators.sections.length; j++ ) {
				validators.sections[ j ]( ast.sections );
			}
			for ( k = 0; k < ast.sections.length; k++ ) {
				section = ast.sections[ k ];
				for ( j = 0; j < validators.section.length; j++ ) {
					validators.section[ j ]( section );
				}
				if ( section.title === 'Parameters' ) {
					for ( j = 0; j < validators.parameters.length; j++ ) {
						validators.parameters[ j ]( section );
					}
				}
				else if ( section.title === 'Returns' ) {
					for ( j = 0; j < validators.returns.length; j++ ) {
						validators.returns[ j ]( section );
					}
				}
				else if ( section.title === 'Examples' ) {
					for ( j = 0; j < validators.examples.length; j++ ) {
						validators.examples[ j ]( section );
					}
				}
			}
		}
	}
}


// EXPORTS //

module.exports = validate;
