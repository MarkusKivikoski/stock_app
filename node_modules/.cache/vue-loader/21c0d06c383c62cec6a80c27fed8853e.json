{"remainingRequest":"C:\\Users\\Markus\\technical-analysis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Markus\\technical-analysis\\src\\App.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Markus\\technical-analysis\\src\\App.vue","mtime":1557498569887},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\ts-loader\\index.js","mtime":1543302582000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1543737895000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport HelloWorld from '@/components/HelloWorld.vue';\r\nimport Chart from '@/components/Chart.vue';\r\nimport SidebarItem from '@/components/SidebarItem.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Chart,\r\n    SidebarItem,\r\n  },\r\n  data() {\r\n    return {\r\n      drawer: null,\r\n      active: 0,\r\n      criteria: '',\r\n    };\r\n  },\r\n  props: {\r\n    source: String,\r\n  },\r\n  methods: {\r\n    range(){\r\n      return [...Array(this.$store.state.names.length).keys()];\r\n    },\r\n    setActive(index: number){\r\n      this.active = index;\r\n    },\r\n    getName(index: number){\r\n      return this.$store.state.names[index];\r\n    },\r\n    filteredRange(){\r\n      let OG = this.range();\r\n      return OG.map(idx => [idx, this.$store.state.names[idx]]).filter(tuple => approved(tuple[1])).map(tuple => tuple[0])\r\n    },\r\n    approved(name: string):boolean{\r\n      return name.contains(this.criteria.toLowerCase());\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <v-app id=\"inspire\">\r\n    <v-navigation-drawer\r\n      v-model=\"drawer\"\r\n      fixed\r\n      app\r\n    >\r\n      <v-list dense>\r\n\r\n\r\n      <v-list-tile>\r\n\r\n        <v-text-field \r\n        v-model=\"criteria\"\r\n        single>\r\n          \r\n        </v-text-field>\r\n\r\n      </v-list-tile>\r\n\r\n<v-list-tile\r\nv-for=\"index in filteredRange()\"\r\n:key=\"index\"\r\n@click=\"setActive(index)\">\r\n          <v-list-tile-action>\r\n            <v-icon>trending_up</v-icon>\r\n          </v-list-tile-action>\r\n          <v-list-tile-content>\r\n            <v-list-tile-title>{{getName(index)}}</v-list-tile-title>\r\n          </v-list-tile-content>\r\n        </v-list-tile>    \r\n\r\n      </v-list>\r\n    </v-navigation-drawer>\r\n    <v-toolbar color=\"indigo\" dark fixed app>\r\n      <v-toolbar-side-icon @click.stop=\"drawer = !drawer\"></v-toolbar-side-icon>\r\n      <v-toolbar-title>Technical Analysis</v-toolbar-title>\r\n    </v-toolbar>\r\n    <v-content>\r\n      <v-container grid-list-md text-xs-center>\r\n        <v-layout row wrap>\r\n          <Chart \r\n          v-bind:index='index' \r\n          v-for=\"index in range()\"\r\n          :key=\"index\"\r\n          v-show=\"index===active\"\r\n          ></Chart>\r\n        </v-layout>\r\n      </v-container>\r\n    </v-content>\r\n  </v-app>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport HelloWorld from '@/components/HelloWorld.vue';\r\nimport Chart from '@/components/Chart.vue';\r\nimport SidebarItem from '@/components/SidebarItem.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Chart,\r\n    SidebarItem,\r\n  },\r\n  data() {\r\n    return {\r\n      drawer: null,\r\n      active: 0,\r\n      criteria: '',\r\n    };\r\n  },\r\n  props: {\r\n    source: String,\r\n  },\r\n  methods: {\r\n    range(){\r\n      return [...Array(this.$store.state.names.length).keys()];\r\n    },\r\n    setActive(index: number){\r\n      this.active = index;\r\n    },\r\n    getName(index: number){\r\n      return this.$store.state.names[index];\r\n    },\r\n    filteredRange(){\r\n      let OG = this.range();\r\n      return OG.map(idx => [idx, this.$store.state.names[idx]]).filter(tuple => approved(tuple[1])).map(tuple => tuple[0])\r\n    },\r\n    approved(name: string):boolean{\r\n      return name.contains(this.criteria.toLowerCase());\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}