{"remainingRequest":"C:\\Users\\Markus\\technical-analysis\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Markus\\technical-analysis\\node_modules\\ts-loader\\index.js??ref--13-2!C:\\Users\\Markus\\technical-analysis\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\Markus\\technical-analysis\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Markus\\technical-analysis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Markus\\technical-analysis\\src\\components\\Chart.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Markus\\technical-analysis\\src\\components\\Chart.vue","mtime":1557498936949},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\ts-loader\\index.js","mtime":1543302582000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1543737895000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Markus\\technical-analysis\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport LineChart from '@/components/LineChart.js';\nimport axios from 'axios';\nexport default {\n  components: {\n    LineChart: LineChart\n  },\n  props: {\n    index: Number\n  },\n  data: function data() {\n    return {\n      datacollection: null,\n      type: 'DATA',\n      symbol: this.$store.state.symbols[this.index],\n      name: this.$store.state.names[this.index]\n    };\n  },\n  mounted: function mounted() {\n    this.fillStockData();\n  },\n  methods: {\n    setData: function setData(thenumbers, thelabels, headline) {\n      this.datacollection = {\n        labels: thelabels,\n        datasets: [{\n          label: headline,\n          backgroundColor: '#f17119',\n          borderColor: '#f17119',\n          data: thenumbers,\n          fill: false\n        }]\n      };\n      this.type = headline;\n    },\n    fillRandomData: function fillRandomData() {\n      this.type = 'RANDOM';\n      var dump = this.getRandomIntArray(30);\n      this.setData(dump, dump.map(function (p) {\n        return String(p);\n      }), this.symbol);\n    },\n    getRandomInt: function getRandomInt() {\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\n    },\n    getRandomIntArray: function getRandomIntArray(n) {\n      var arr = [];\n\n      for (var i = 0; i < n; i++) {\n        arr.push(this.getRandomInt());\n      }\n\n      return arr;\n    },\n    fillStockData: function fillStockData() {\n      var _this = this;\n\n      this.type = 'STOCK';\n      var fetcher = axios({\n        method: 'get',\n        url: 'https://www.alphavantage.co/query',\n        params: {\n          function: 'TIME_SERIES_INTRADAY',\n          symbol: this.symbol,\n          interval: '60min',\n          apikey: 'HX7K9KL65T31O9FH'\n        }\n      }).then(function (res) {\n        var root = res.data['Time Series (60min)'];\n        var prices = Object.keys(root).map(function (key, index) {\n          return Number(root[key]['1. open']);\n        });\n\n        _this.setData(prices, Object.keys(root).map(function (str) {\n          return str.substr(0, 11);\n        }), _this.name);\n      }).catch(function (e) {\n        return e;\n      });\n      this.fillRandomData();\n    }\n  }\n};",{"version":3,"sources":["C:\\Users\\Markus\\technical-analysis\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\Markus\\technical-analysis\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Markus\\technical-analysis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Markus\\technical-analysis\\src\\components\\Chart.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport LineChart from '@/components/LineChart.js';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    LineChart,\r\n  },\r\n\r\n  props: {\r\n    index: Number,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      datacollection: null,\r\n      type: 'DATA',\r\n      symbol: this.$store.state.symbols[this.index],\r\n      name: this.$store.state.names[this.index],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fillStockData();\r\n  },\r\n  methods: {\r\n    setData(thenumbers: number[], thelabels: string[], headline: string): void {\r\n      this.datacollection = {\r\n        labels: thelabels,\r\n        datasets: [\r\n          {\r\n            label: headline,\r\n            backgroundColor: '#f17119',\r\n            borderColor: '#f17119',\r\n            data: thenumbers,\r\n            fill: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.type=headline\r\n    },\r\n    fillRandomData(): void {\r\n      this.type = 'RANDOM';\r\n      const dump = this.getRandomIntArray(30);\r\n      this.setData(dump, dump.map(p => String(p)), this.symbol);\r\n    },\r\n    getRandomInt() {\r\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\r\n    },\r\n    getRandomIntArray(n: number): number[] {\r\n      const arr = [];\r\n      for (let i = 0; i < n; i++) {\r\n        arr.push(this.getRandomInt());\r\n      }\r\n      return arr;\r\n    },\r\n    fillStockData(): void {\r\n      this.type = 'STOCK';\r\n      const fetcher = axios({\r\n        method: 'get',\r\n        url: 'https://www.alphavantage.co/query',\r\n        params: {\r\n          function: 'TIME_SERIES_INTRADAY',\r\n          symbol: this.symbol,\r\n          interval: '60min',\r\n          apikey: 'HX7K9KL65T31O9FH',\r\n        },\r\n      }).then((res) => {\r\n        const root = res.data['Time Series (60min)'];\r\n        const prices = Object.keys(root).map((key, index) => {\r\n          return Number(root[key]['1. open']);\r\n        });\r\n        this.setData(prices, Object.keys(root).map(str => str.substr(0, 11)), this.name);\r\n      }).catch((e) => {\r\n        return e;\r\n      });\r\n      this.fillRandomData();\r\n    },\r\n  },\r\n};\r\n"],"sourceRoot":""}]}